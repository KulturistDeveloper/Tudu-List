{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tudu-List\\\\src\\\\index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport TodoListTemplate from \"./TodoListTemplate\";\nimport Form from \"./Form\"; //import TodoItemList from \"./TodoItemList\";\n\nimport TodoItemList from \"./TodoItemLists\";\nimport Palette from \"./Palette\";\nconst colors = [\"#343a40\", \"#f03e3e\", \"#12b886\", \"#228ae6\"];\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.id = 3;\n    this.state = {\n      input: \"\",\n      todos: [{\n        id: 0,\n        text: \"Задача 1\",\n        checked: false\n      }, {\n        id: 1,\n        text: \"Задача 2\",\n        checked: true\n      }, {\n        id: 2,\n        text: \"Задача 3\",\n        checked: false\n      }],\n      color: \"#343a40\"\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        input: e.target.value //следующее изменения значения ввода\n\n      });\n    };\n\n    this.handleCreate = () => {\n      const {\n        input,\n        todos,\n        color\n      } = this.state;\n      this.setState({\n        input: \"\",\n        //очистить ввод\n        todos: todos.concat({\n          //добавляем в массив с помощью concat\n          id: this.id++,\n          text: input,\n          checked: false,\n          color\n        })\n      });\n    };\n\n    this.handleKeyPress = e => {\n      if (e.key === \"Enter\") {\n        //при нажатии Enter вызываем handleCreate\n        this.handleCreate();\n      }\n    };\n\n    this.handleToggle = id => {\n      const {\n        todos\n      } = this.state; // Найдите номер элемента с идентификатором, полученным в качестве параметра.\n\n      const index = todos.findIndex(todo => todo.id === id);\n      const selected = todos[index]; //выбираем объект\n      //const nextTodos = [...todos];\n      //скопируем существующие значения и перезапишем проверенные значения\n      // nextTodos[index] = {\n      //   ...selected,\n      //   checked: !selected.checked\n      // };\n      // this.setState({\n      //   todos: nextTodos\n      // });\n      // другой путь\n\n      this.setState({\n        todos: [...todos.slice(0, index), { ...selected,\n          checked: !selected.checked\n        }, ...todos.slice(index + 1, todos.length)]\n      });\n    };\n\n    this.handleRemove = id => {\n      const {\n        todos\n      } = this.state;\n      this.setState({\n        todos: todos.filter(todo => todo.id !== id)\n      });\n    };\n\n    this.handleSelectColor = color => {\n      this.setState({\n        color\n      });\n    };\n  }\n\n  render() {\n    const {\n      input,\n      todos,\n      color\n    } = this.state;\n    const {\n      handleChange,\n      handleCreate,\n      handleKeyPress,\n      handleToggle,\n      handleRemove,\n      handleSelectColor\n    } = this;\n    return /*#__PURE__*/React.createElement(TodoListTemplate, {\n      form: /*#__PURE__*/React.createElement(Form, {\n        value: input,\n        onKeyPress: handleKeyPress,\n        onChange: handleChange,\n        onCreate: handleCreate,\n        color: color,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }),\n      palette: /*#__PURE__*/React.createElement(Palette, {\n        colors: colors,\n        selected: color,\n        onSelect: handleSelectColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TodoItemList, {\n      todos: todos,\n      onToggle: handleToggle,\n      onRemove: handleRemove,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["D:/Tudu-List/src/index.js"],"names":["React","Component","ReactDOM","TodoListTemplate","Form","TodoItemList","Palette","colors","App","id","state","input","todos","text","checked","color","handleChange","e","setState","target","value","handleCreate","concat","handleKeyPress","key","handleToggle","index","findIndex","todo","selected","slice","length","handleRemove","filter","handleSelectColor","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport TodoListTemplate from \"./TodoListTemplate\";\nimport Form from \"./Form\";\n//import TodoItemList from \"./TodoItemList\";\nimport TodoItemList from \"./TodoItemLists\";\nimport Palette from \"./Palette\";\n\nconst colors = [\"#343a40\", \"#f03e3e\", \"#12b886\", \"#228ae6\"];\n\nclass App extends Component {\n  id = 3; //0, 1, 2 (первые три уже существуют) поэтому ставим 3\n  state = {\n    input: \"\",\n    todos: [\n      { id: 0, text: \"Задача 1\", checked: false },\n      { id: 1, text: \"Задача 2\", checked: true },\n      { id: 2, text: \"Задача 3\", checked: false }\n    ],\n    color: \"#343a40\"\n  };\n  handleChange = e => {\n    this.setState({\n      input: e.target.value //следующее изменения значения ввода\n    });\n  };\n  handleCreate = () => {\n    const { input, todos, color } = this.state;\n    this.setState({\n      input: \"\", //очистить ввод\n      todos: todos.concat({\n        //добавляем в массив с помощью concat\n        id: this.id++,\n        text: input,\n        checked: false,\n        color\n      })\n    });\n  };\n  handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      //при нажатии Enter вызываем handleCreate\n      this.handleCreate();\n    }\n  };\n  handleToggle = id => {\n    const { todos } = this.state;\n    // Найдите номер элемента с идентификатором, полученным в качестве параметра.\n    const index = todos.findIndex(todo => todo.id === id);\n    const selected = todos[index]; //выбираем объект\n    //const nextTodos = [...todos];\n    //скопируем существующие значения и перезапишем проверенные значения\n    // nextTodos[index] = {\n    //   ...selected,\n    //   checked: !selected.checked\n    // };\n    // this.setState({\n    //   todos: nextTodos\n    // });\n    // другой путь\n    this.setState({\n      todos: [\n        ...todos.slice(0, index),\n        {\n          ...selected,\n          checked: !selected.checked\n        },\n        ...todos.slice(index + 1, todos.length)\n      ]\n    });\n  };\n  //убрать задачу\n  handleRemove = id => {\n    const { todos } = this.state;\n    this.setState({\n      todos: todos.filter(todo => todo.id !== id)\n    });\n  };\n  //цвет\n  handleSelectColor = color => {\n    this.setState({\n      color\n    });\n  };\n  render() {\n    const { input, todos, color } = this.state;\n    const {\n      handleChange,\n      handleCreate,\n      handleKeyPress,\n      handleToggle,\n      handleRemove,\n      handleSelectColor\n    } = this;\n    return (\n      <TodoListTemplate\n        form={\n          <Form\n            value={input}\n            onKeyPress={handleKeyPress}\n            onChange={handleChange}\n            onCreate={handleCreate}\n            color={color}\n          />\n        }\n        palette={\n          <Palette\n            colors={colors}\n            selected={color}\n            onSelect={handleSelectColor}\n          />\n        }\n      >\n        <TodoItemList\n          todos={todos}\n          onToggle={handleToggle}\n          onRemove={handleRemove}\n        />\n      </TodoListTemplate>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}