{"ast":null,"code":"import _objectSpread from \"D:\\\\Tudu List\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"D:\\\\Tudu List\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\Tudu List\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Tudu List\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\Tudu List\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\Tudu List\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\Tudu List\\\\src\\\\index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport TodoListTemplate from \"./TodoListTemplate\";\nimport Form from \"./Form\"; //import TodoItemList from \"./TodoItemList\";\n\nimport TodoItemList from \"./TodoItemLists\";\nimport Palette from \"./Palette\";\nvar colors = [\"#343a40\", \"#f03e3e\", \"#12b886\", \"#228ae6\"];\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.id = 3;\n    _this.state = {\n      input: \"\",\n      todos: [{\n        id: 0,\n        text: \"리액트 소개1\",\n        checked: false\n      }, {\n        id: 1,\n        text: \"리액트 소개2\",\n        checked: true\n      }, {\n        id: 2,\n        text: \"리액트 소개3\",\n        checked: false\n      }],\n      color: \"#343a40\"\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        input: e.target.value //input의 다음 바뀔값\n\n      });\n    };\n\n    _this.handleCreate = function () {\n      var _this$state = _this.state,\n          input = _this$state.input,\n          todos = _this$state.todos,\n          color = _this$state.color;\n\n      _this.setState({\n        input: \"\",\n        //input 비우고\n        todos: todos.concat({\n          //concat 을 사용하여 배열에 추가\n          id: _this.id++,\n          text: input,\n          checked: false,\n          color: color\n        })\n      });\n    };\n\n    _this.handleKeyPress = function (e) {\n      if (e.key === \"Enter\") {\n        //눌려진 키가 Enter면 handleCreate호출\n        _this.handleCreate();\n      }\n    };\n\n    _this.handleToggle = function (id) {\n      var todos = _this.state.todos; // 파라미터로 받은 id를 가지고 몇번째 아이템인지 찾습니다.\n\n      var index = todos.findIndex(function (todo) {\n        return todo.id === id;\n      });\n      var selected = todos[index]; //선택한 객체\n      //const nextTodos = [...todos];\n      //기존의 값들을 복사하고 checked 값을 덮어쓰기\n      // nextTodos[index] = {\n      //   ...selected,\n      //   checked: !selected.checked\n      // };\n      // this.setState({\n      //   todos: nextTodos\n      // });\n      // 다른 방법\n\n      _this.setState({\n        todos: [].concat(_toConsumableArray(todos.slice(0, index)), [_objectSpread(_objectSpread({}, selected), {}, {\n          checked: !selected.checked\n        })], _toConsumableArray(todos.slice(index + 1, todos.length)))\n      });\n    };\n\n    _this.handleRemove = function (id) {\n      var todos = _this.state.todos;\n\n      _this.setState({\n        todos: todos.filter(function (todo) {\n          return todo.id !== id;\n        })\n      });\n    };\n\n    _this.handleSelectColor = function (color) {\n      _this.setState({\n        color: color\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          input = _this$state2.input,\n          todos = _this$state2.todos,\n          color = _this$state2.color;\n      var handleChange = this.handleChange,\n          handleCreate = this.handleCreate,\n          handleKeyPress = this.handleKeyPress,\n          handleToggle = this.handleToggle,\n          handleRemove = this.handleRemove,\n          handleSelectColor = this.handleSelectColor;\n      return /*#__PURE__*/React.createElement(TodoListTemplate, {\n        form: /*#__PURE__*/React.createElement(Form, {\n          value: input,\n          onKeyPress: handleKeyPress,\n          onChange: handleChange,\n          onCreate: handleCreate,\n          color: color,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }\n        }),\n        palette: /*#__PURE__*/React.createElement(Palette, {\n          colors: colors,\n          selected: color,\n          onSelect: handleSelectColor,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(TodoItemList, {\n        todos: todos,\n        onToggle: handleToggle,\n        onRemove: handleRemove,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["D:/Tudu List/src/index.js"],"names":["React","Component","ReactDOM","TodoListTemplate","Form","TodoItemList","Palette","colors","App","id","state","input","todos","text","checked","color","handleChange","e","setState","target","value","handleCreate","concat","handleKeyPress","key","handleToggle","index","findIndex","todo","selected","slice","length","handleRemove","filter","handleSelectColor","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport TodoListTemplate from \"./TodoListTemplate\";\nimport Form from \"./Form\";\n//import TodoItemList from \"./TodoItemList\";\nimport TodoItemList from \"./TodoItemLists\";\nimport Palette from \"./Palette\";\n\nconst colors = [\"#343a40\", \"#f03e3e\", \"#12b886\", \"#228ae6\"];\n\nclass App extends Component {\n  id = 3; //이미 0,1,2 가 존재하므로 3으로 설정\n  state = {\n    input: \"\",\n    todos: [\n      { id: 0, text: \"리액트 소개1\", checked: false },\n      { id: 1, text: \"리액트 소개2\", checked: true },\n      { id: 2, text: \"리액트 소개3\", checked: false }\n    ],\n    color: \"#343a40\"\n  };\n  handleChange = e => {\n    this.setState({\n      input: e.target.value //input의 다음 바뀔값\n    });\n  };\n  handleCreate = () => {\n    const { input, todos, color } = this.state;\n    this.setState({\n      input: \"\", //input 비우고\n      todos: todos.concat({\n        //concat 을 사용하여 배열에 추가\n        id: this.id++,\n        text: input,\n        checked: false,\n        color\n      })\n    });\n  };\n  handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      //눌려진 키가 Enter면 handleCreate호출\n      this.handleCreate();\n    }\n  };\n  handleToggle = id => {\n    const { todos } = this.state;\n    // 파라미터로 받은 id를 가지고 몇번째 아이템인지 찾습니다.\n    const index = todos.findIndex(todo => todo.id === id);\n    const selected = todos[index]; //선택한 객체\n    //const nextTodos = [...todos];\n    //기존의 값들을 복사하고 checked 값을 덮어쓰기\n    // nextTodos[index] = {\n    //   ...selected,\n    //   checked: !selected.checked\n    // };\n    // this.setState({\n    //   todos: nextTodos\n    // });\n    // 다른 방법\n    this.setState({\n      todos: [\n        ...todos.slice(0, index),\n        {\n          ...selected,\n          checked: !selected.checked\n        },\n        ...todos.slice(index + 1, todos.length)\n      ]\n    });\n  };\n  //아이템 제거\n  handleRemove = id => {\n    const { todos } = this.state;\n    this.setState({\n      todos: todos.filter(todo => todo.id !== id)\n    });\n  };\n  // 컬러\n  handleSelectColor = color => {\n    this.setState({\n      color\n    });\n  };\n  render() {\n    const { input, todos, color } = this.state;\n    const {\n      handleChange,\n      handleCreate,\n      handleKeyPress,\n      handleToggle,\n      handleRemove,\n      handleSelectColor\n    } = this;\n    return (\n      <TodoListTemplate\n        form={\n          <Form\n            value={input}\n            onKeyPress={handleKeyPress}\n            onChange={handleChange}\n            onCreate={handleCreate}\n            color={color}\n          />\n        }\n        palette={\n          <Palette\n            colors={colors}\n            selected={color}\n            onSelect={handleSelectColor}\n          />\n        }\n      >\n        <TodoItemList\n          todos={todos}\n          onToggle={handleToggle}\n          onRemove={handleRemove}\n        />\n      </TodoListTemplate>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}